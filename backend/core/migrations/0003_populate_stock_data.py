# Generated by Django 5.1.1 on 2025-03-09 05:28

from datetime import date, timedelta
from decimal import Decimal
from django.db import migrations


def create_sample_stock_data(apps, schema_editor):
    StockTicker = apps.get_model("core", "StockTicker")

    # Sample stock data for major companies
    stocks = [
        {
            "symbol": "AAPL",
            "company_name": "Apple Inc.",
            "price": Decimal("188.02"),
            "change": Decimal("2.15"),
            "percent_change": Decimal("1.18"),
            "volume": 45750000,
            "market_cap": 2950000000000,
            "date": date.today(),
        },
        {
            "symbol": "MSFT",
            "company_name": "Microsoft Corporation",
            "price": Decimal("417.88"),
            "change": Decimal("-3.25"),
            "percent_change": Decimal("-0.78"),
            "volume": 28300000,
            "market_cap": 3120000000000,
            "date": date.today(),
        },
        {
            "symbol": "AMZN",
            "company_name": "Amazon.com Inc.",
            "price": Decimal("178.08"),
            "change": Decimal("0.76"),
            "percent_change": Decimal("0.43"),
            "volume": 32450000,
            "market_cap": 1840000000000,
            "date": date.today(),
        },
        {
            "symbol": "GOOGL",
            "company_name": "Alphabet Inc.",
            "price": Decimal("142.65"),
            "change": Decimal("-1.38"),
            "percent_change": Decimal("-0.96"),
            "volume": 21560000,
            "market_cap": 1790000000000,
            "date": date.today(),
        },
        {
            "symbol": "META",
            "company_name": "Meta Platforms Inc.",
            "price": Decimal("485.58"),
            "change": Decimal("5.82"),
            "percent_change": Decimal("1.21"),
            "volume": 15780000,
            "market_cap": 1230000000000,
            "date": date.today(),
        },
        {
            "symbol": "TSLA",
            "company_name": "Tesla Inc.",
            "price": Decimal("177.46"),
            "change": Decimal("-5.29"),
            "percent_change": Decimal("-2.89"),
            "volume": 92350000,
            "market_cap": 567000000000,
            "date": date.today(),
        },
        {
            "symbol": "NVDA",
            "company_name": "NVIDIA Corporation",
            "price": Decimal("875.28"),
            "change": Decimal("14.73"),
            "percent_change": Decimal("1.71"),
            "volume": 45820000,
            "market_cap": 2160000000000,
            "date": date.today(),
        },
    ]

    # Create historical data for each stock (for the past 6 days)
    for stock_data in stocks:
        base_price = stock_data["price"] - (stock_data["change"] * 6)
        symbol = stock_data["symbol"]
        company_name = stock_data["company_name"]
        market_cap = stock_data["market_cap"]

        for i in range(6, -1, -1):  # 6 days ago to today
            current_date = date.today() - timedelta(days=i)
            daily_change = Decimal(
                str(round(float(stock_data["change"]) * (1 + (i % 3 - 1) * 0.5), 2))
            )
            current_price = base_price + (daily_change * (6 - i))

            StockTicker.objects.create(
                symbol=symbol,
                company_name=company_name,
                price=current_price,
                change=daily_change,
                percent_change=Decimal(
                    str(round(float(daily_change) / float(current_price) * 100, 2))
                ),
                volume=stock_data["volume"] + (i * 1000000),
                market_cap=market_cap,
                date=current_date,
            )


def remove_sample_data(apps, schema_editor):
    StockTicker = apps.get_model("core", "StockTicker")
    StockTicker.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0002_stockticker"),
    ]

    operations = [
        migrations.RunPython(create_sample_stock_data, remove_sample_data),
    ]
