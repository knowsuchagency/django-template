[tools]
python = "3.12"

[settings]
experimental = true
python.venv_auto_create = true
python.venv_stdlib = false

[env]
PYTHONPATH = "src"
SECRET_KEY = "thisisthesupersecretkey"
DATABASE_URL = "sqlite:///data.db"
# REDIS_URL = "redis://localhost:6379"
CACHE_PREFIX = "django_cache"
ALLOWED_HOSTS = "localhost,127.0.0.1"
CSRF_TRUSTED_ORIGINS = "http://localhost:8000,http://localhost:8080"
LOG_REQUESTS = "true"
DEBUG = "true"
COMPOSE_BAKE = "true"
# AWS_ACCESS_KEY_ID = "op://dev/ses/access_key_id"
# AWS_SECRET_ACCESS_KEY = "op://dev/ses/secret_access_key"
# AWS_DEFAULT_REGION = "op://dev/ses/region"
# SENTRY_DSN = "op://dev/sentry/sandbox_dsn"

[tasks.format]
description = "format/fix code"
run = [
    "uvx ruff check --fix",
    "uvx ruff format"
]

[tasks.frontend-build]
description = "build frontend"
run = "cd frontend && bun run build"

[tasks.runserver]
depends = ["collectstatic"]
description = "run development server"
run = "npx concurrently --names 'Django,Vite' --prefix-colors 'green,blue' 'DEBUG=true uv run python manage.py runserver' 'cd frontend && bun run dev'"

[tasks.makemigrations]
description = "make migrations"
run = "uv run python manage.py makemigrations"

[tasks.migrate]
description = "migrate"
run = [
    "uv run python manage.py migrate",
    "uv run python manage.py createcachetable"
]

[tasks.flush]
description = "flush database"
run = "uv run python manage.py flush"

[tasks.createsuperuser]
description = "create superuser"
run = "uv run python manage.py createsuperuser"

[tasks.collectstatic]
description = "build theme and collect static files"
depends = ["frontend-build"]
run = "uv run python manage.py collectstatic --noinput"

[tasks.test]
description = "run tests"
env = { DATABASE_URL = "sqlite:///:memory:", LOG_REQUESTS = "false" }
run = "uv run python manage.py test src.core.tests"

[tasks.setup_periodic_tasks]
description = "set up periodic tasks"
depends = ["migrate"]
run = "uv run python manage.py setup_periodic_tasks"

[tasks.qcluster]
description = "run q cluster"
depends = ["setup_periodic_tasks"]
run = "uv run python manage.py qcluster"

[tasks.qmonitor]
description = "monitor q cluster"
run = "uv run python manage.py qmonitor"

[tasks.qinfo]
description = "view q info"
run = "uv run python manage.py qinfo"

[tasks.shell]
description = "django shell"
run = "uv run python manage.py shell"
